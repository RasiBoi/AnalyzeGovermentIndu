install.packages("ggplot2")
install.packages("dplyr")
install.packages("readr")
library(ggplot2) # For creating advanced visualizations
library(dplyr)   # For data manipulation
library(readr)
file_path <- "auto_Info.csv"
auto_data <- read_csv(file_path)
head(auto_data)
mean_engine <- mean(auto_data$engine_size, na.rm = TRUE)
median_engine <- median(auto_data$engine_size, na.rm = TRUE)
sd_engine <- sd(auto_data$engine_size, na.rm = TRUE)
# Print the results
cat("Engine Size Analysis:\n")
cat("Mean:", round(mean_engine, 2), "L\n")
cat("Median:", round(median_engine, 2), "L\n")
cat("Standard Deviation:", round(sd_engine, 2), "L\n\n")
# Create the histogram with a bell curve for Engine Size
ggplot(auto_data, aes(x = engine_size)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = "#4A90E2", color = "white", alpha = 0.7) +
stat_function(
fun = dnorm,
args = list(mean = mean_engine, sd = sd_engine),
color = "#D0021B",
size = 1
) +
geom_vline(aes(xintercept = mean_engine), color = "#D0021B", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = median_engine), color = "#F5A623", linetype = "dotted", size = 1) +
labs(
title = "Figure 3.1: Distribution of Vehicle Engine Size (L)",
subtitle = "Histogram with Normal Distribution Curve (Mean in Red, Median in Orange)",
x = "Engine Size (Liters)",
y = "Density"
) +
theme_minimal()
mean_hp <- mean(auto_data$horsepower, na.rm = TRUE)
median_hp <- median(auto_data$horsepower, na.rm = TRUE)
sd_hp <- sd(auto_data$horsepower, na.rm = TRUE)
# Print the results
cat("Horsepower Analysis:\n")
cat("Mean:", round(mean_hp, 2), "hp\n")
cat("Median:", round(median_hp, 2), "hp\n")
cat("Standard Deviation:", round(sd_hp, 2), "hp\n\n")
# Create the histogram with a bell curve for Horsepower
ggplot(auto_data, aes(x = horsepower)) +
geom_histogram(aes(y = ..density..), binwidth = 20, fill = "#50E3C2", color = "white", alpha = 0.7) +
stat_function(
fun = dnorm,
args = list(mean = mean_hp, sd = sd_hp),
color = "#D0021B",
size = 1
) +
geom_vline(aes(xintercept = mean_hp), color = "#D0021B", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = median_hp), color = "#F5A623", linetype = "dotted", size = 1) +
labs(
title = "Figure 3.2: Distribution of Vehicle Horsepower (hp)",
subtitle = "Histogram with Normal Distribution Curve (Mean in Red, Median in Orange)",
x = "Horsepower (hp)",
y = "Density"
) +
theme_minimal()
mean_weight <- mean(auto_data$curb_weight, na.rm = TRUE)
median_weight <- median(auto_data$curb_weight, na.rm = TRUE)
sd_weight <- sd(auto_data$curb_weight, na.rm = TRUE)
# Print the results
cat("Curb Weight Analysis:\n")
cat("Mean:", round(mean_weight, 2), "lbs\n")
cat("Median:", round(median_weight, 2), "lbs\n")
cat("Standard Deviation:", round(sd_weight, 2), "lbs\n\n")
# Create the histogram with a bell curve for Curb Weight
ggplot(auto_data, aes(x = curb_weight)) +
geom_histogram(aes(y = ..density..), binwidth = 250, fill = "#B8E986", color = "white", alpha = 0.7) +
stat_function(
fun = dnorm,
args = list(mean = mean_weight, sd = sd_weight),
color = "#D0021B",
size = 1
) +
geom_vline(aes(xintercept = mean_weight), color = "#D0021B", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = median_weight), color = "#F5A623", linetype = "dotted", size = 1) +
labs(
title = "Figure 3.3: Distribution of Vehicle Curb Weight (lbs)",
subtitle = "Histogram with Normal Distribution Curve (Mean in Red, Median in Orange)",
x = "Curb Weight (lbs)",
y = "Density"
) +
theme_minimal()
mean_price <- mean(auto_data$price, na.rm = TRUE)
median_price <- median(auto_data$price, na.rm = TRUE)
sd_price <- sd(auto_data$price, na.rm = TRUE)
# Print the results
cat("Price Analysis:\n")
cat("Mean: $", round(mean_price, 2), "\n")
cat("Median: $", round(median_price, 2), "\n")
cat("Standard Deviation: $", round(sd_price, 2), "\n\n")
# Create the histogram with a bell curve for Price
ggplot(auto_data, aes(x = price)) +
geom_histogram(aes(y = ..density..), binwidth = 5000, fill = "#F8E71C", color = "white", alpha = 0.7) +
stat_function(
fun = dnorm,
args = list(mean = mean_price, sd = sd_price),
color = "#D0021B",
size = 1
) +
geom_vline(aes(xintercept = mean_price), color = "#D0021B", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = median_price), color = "#F5A623", linetype = "dotted", size = 1) +
labs(
title = "Figure 3.4: Distribution of Vehicle Price (USD)",
subtitle = "Histogram with Normal Distribution Curve (Mean in Red, Median in Orange)",
x = "Price (USD)",
y = "Density"
) +
theme_minimal()
auto_data$vehicle_type <- as.factor(auto_data$vehicle_type)
anova_model <- aov(price ~ vehicle_type, data = auto_data)
# Get the summary of the ANOVA test
anova_summary <- summary(anova_model)
# Print the summary to see the F-statistic and p-value
cat("One-Way ANOVA Test: Price by Vehicle Type\n")
print(anova_summary)
auto_data <- auto_data %>%
mutate(vehicle_type = reorder(vehicle_type, price, FUN = median))
# Create the box plot
ggplot(auto_data, aes(x = vehicle_type, y = price, fill = vehicle_type)) +
geom_boxplot(alpha = 0.8) +
geom_jitter(color = "black", size = 0.4, alpha = 0.2) + # Optional: shows individual data points
labs(
title = "Figure 4.1: Vehicle Price Distribution by Vehicle Type",
subtitle = "Box plot showing median, quartiles, and outliers for each category",
x = "Vehicle Type",
y = "Price (USD)"
) +
scale_y_continuous(labels = scales::dollar) + # Format y-axis labels as dollars
theme_minimal() +
theme(legend.position = "none")
library(ggplot2)
library(dplyr)
library(readr)
library(corrplot)
umeric_vars <- auto_data %>%
select(price, engine_size, horsepower, curb_weight, age)
# Calculate the correlation matrix
cor_matrix <- cor(numeric_vars, use = "complete.obs") # Use complete observations
ggplot(auto_data, aes(x = engine_size, y = price)) +
geom_point(alpha = 0.5, color = "#4A90E2") +
geom_smooth(method = "lm", color = "#D0021B", se = FALSE) +
labs(
title = "Figure 5.1: Scatter plot of Price vs. Engine Size",
subtitle = "A strong, positive linear relationship is visible",
x = "Engine Size (Liters)",
y = "Price (USD)"
) +
theme_bw()
ggplot(auto_data, aes(x = horsepower, y = price)) +
geom_point(alpha = 0.5, color = "#50E3C2") +
geom_smooth(method = "lm", color = "#D0021B", se = FALSE) +
labs(
title = "Figure 5.2: Scatter plot of Price vs. Horsepower",
subtitle = "A very strong, positive linear relationship is visible",
x = "Horsepower (hp)",
y = "Price (USD)"
) +
theme_bw()
ggplot(auto_data, aes(x = curb_weight, y = price)) +
geom_point(alpha = 0.5, color = "#B8E986") +
geom_smooth(method = "lm", color = "#D0021B", se = FALSE) +
labs(
title = "Figure 5.3: Scatter plot of Price vs. Curb Weight",
subtitle = "The strongest positive linear relationship is visible",
x = "Curb Weight (lbs)",
y = "Price (USD)"
) +
theme_bw()
ggplot(auto_data, aes(x = age, y = price)) +
geom_point(alpha = 0.5, color = "#F8E71C") +
geom_smooth(method = "lm", color = "#D0021B", se = FALSE) +
labs(
title = "Figure 5.4: Scatter plot of Price vs. Age",
subtitle = "A moderate, negative linear relationship (depreciation) is visible",
x = "Age (Years)",
y = "Price (USD)"
) +
theme_bw()
model <- lm(price ~ engine_size + horsepower + curb_weight + age, data = auto_data)
# --- 4.1. Normality Testing of Residuals ---
# Extract the residuals from the model
model_residuals <- resid(model)
# Perform the Shapiro-Wilk test for normality
shapiro_test_result <- shapiro.test(model_residuals)
# Print the Shapiro-Wilk test results
cat("Shapiro-Wilk Normality Test on Model Residuals:\n")
print(shapiro_test_result)
cat("\n")
# Visualize normality with a Q-Q plot
qqnorm(model_residuals, main = "Figure 5.5: Normal Q-Q Plot of Residuals")
qqline(model_residuals, col = "red", lwd = 2)
# --- 4.2. Regression Model Summary ---
# Get the detailed summary of the regression model
model_summary <- summary(model)
# Print the model summary
cat("Multiple Linear Regression Model Summary:\n")
print(model_summary)
